# creat eks cluster using an existing vpc, it also creat a manage group
---
#创建EKS集群并且使用已存在的VPC模板
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: aloda-test-karpenter
  region: us-east-1 # set the cluster resource region
  version: "1.30"   # set the eks version
iam:
  withOIDC: true    # OIDC配置，很重要，AWS Loadbalancer Controller等addon都需要
vpc:
  id: "vpc-0254190493ff5f1b9" #replace your vpc id
  cidr: "10.0.0.0/16"  #must match CIDR used by the given VPC
  subnets:
    public:
      us-east-1a:
        id: "subnet-0192634d3fed67019"
        cidr: "10.0.0.0/20"
      us-east-1b:
        id: "subnet-0691ad1fb096770e9"
        cidr: "10.0.16.0/20"
      us-east-1c:
        id: "subnet-0ab22134bdcb289c5"
        cidr: "10.0.32.0/20"
#cloudWatch:
#  clusterLogging:
#    enableTypes: ["api", "audit", "authenticator", "controllerManager","scheduler"]   # 开启控制平面的日志功能，日志输出到cloudwatch的日志组里
#    # all supported types: "api", "audit", "authenticator", "controllerManager", "scheduler"
#    # supported special values: "*" and "all"
managedNodeGroups:
  - name: test-nodes
    labels:
      role: test-nodes
    instanceType: t3.medium
    minSize: 2
    desiredCapacity: 2
    maxSize: 4
    volumeSize: 30
    volumeType: gp3
    spot: true
    privateNetworking: true
    subnets:
      - subnet-077fda5ffae2c07b4
      - subnet-0c5a12c11946f81ea
      - subnet-0abb83e378b00f717
    ssh:
      publicKeyName: aloda-us-east-1


